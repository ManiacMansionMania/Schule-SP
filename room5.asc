// Klaus's Zimmer (Ronville Schul-Starterpack)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oTuer.Clickable = false;
	oTuer.Visible = true;
	Door[eDoorNumKlaus].Init(oTuer, hTuer);
	
	if ( player.PreviousRoom == 8 ) // Schule draußen
	{
		Door[eDoorNumKlaus].l_Room				= 8;
		Door[eDoorNumKlaus].i_XPosition		= 320;
		Door[eDoorNumKlaus].i_YPosition		= 140;
		Door[eDoorNumKlaus].l_Direction		= eDirRight;
	}
	else // if ( player.PreviousRoom == 7 ) Vor der Schule
	{
		Door[eDoorNumKlaus].l_Room				= 7;
		Door[eDoorNumKlaus].i_XPosition		= 0;
		Door[eDoorNumKlaus].i_YPosition		= 330;
		Door[eDoorNumKlaus].l_Direction		= eDirLeft;
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if (any_click_move(Door[eDoorNumKlaus].i_NewXPosition, Door[eDoorNumKlaus].i_NewYPosition, eDirUp))
	{
		if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		else if ( Door[eDoorNumKlaus].Click() )
		{
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
function oSchrank_AnyClick()
{
	if (any_click_move(255, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich habe noch genug saubere Outfits.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der passt nicht in meine Tasche.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Soll ich mich etwa darin verstecken?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Der ist doch schon offen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(83);
			oSchrank.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das hat in meinem Schrank nichts verloren.");
		}
		else Unhandled();
	}
}

function oSchublade_AnyClick()
{
	if (any_click_move(130, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Was soll ich damit?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Schließen wäre wohl sinnvoller.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die ist doch schon offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(1);
			oSchublade.Visible = false;
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Hinter der Schublade ist nichts versteckt.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Holz knarrt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das da nicht reinlegen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hFenster_AnyClick()
{
	if (any_click_move(40, 125, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hier hat man einen wunderbaren Blick auf die Straße.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ja ne, is klar.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Putzen könnte ich es mal wieder ...");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Lieber nicht.");
      Wait(20);
      player.Say("Die Luft hier drinnen ist mit Sicherheit besser als die da draußen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist doch schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hPoster_AnyClick()
{
	if (any_click_move(60, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("\"Kill 'Em All!\"");
			player.FaceDirection(eDirDown);
			player.Say("Das ist mein Motto.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Was soll ich damit?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wie soll ich denn ein Poster benutzen?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Poster klemmt an der Wand.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hEnterprise_AnyClick()
{
	if (any_click_move(125, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Modell der Enterprise.");
      player.Say("Daran habe ich monatelang gebastelt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Was soll ich damit?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(20);
			player.FaceDirection(eDirDown);
			player.Say("Wie stellst du dir das vor?");
      player.Say("Das ist doch nur ein Modell.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Beam me up Scotty.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Modell ist bereits sauber verklebt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das würde die Modell-Besatzung arg durchschütteln.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hTischlampe_AnyClick()
{
	if (any_click_move(60, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Schreibtischlampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist doch keine Taschenlampe.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Hier ist es schon hell genug.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich brauche die Glühbirne nicht zu wechseln.");
			player.Say("Erst wenn sie kaputt geht, kommt da eine LED-Leuchte rein.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das passt so.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nicht jetzt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hTisch_AnyClick()
{
	if (any_click_move(100, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Schreibtisch.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der steht hier schon ganz gut.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und was soll ich damit machen?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Tisch hat Schubladen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Tischerücken? Ohne Uri Geller?");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das nicht auf den Schreibtisch legen.");
		}
		else Unhandled();
	}
}

function hBett_AnyClick()
{
	if (any_click_move(65, 130, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist mein Bett und meine Spielwiese.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Wieso sollte ich?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Sehe ich etwa müde aus?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose) 
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht mit diesem Bett nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das hat nichts in meinem Bett verloren.");
		}
		else Unhandled();
	}
}

function hSchrank_AnyClick()
{
	if (any_click_move(255, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Kleiderschrank.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der passt nicht in meine Tasche.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Soll ich mich etwa darin verstecken?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(85);
			oSchrank.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das hat in meinem Schrank nichts verloren.");
		}
		else Unhandled();
	}
}

function hSchublade01_AnyClick()
{
	// Dummy-Schublade für Episoden
	return hTisch_AnyClick();
}

function hSchublade02_AnyClick()
{
	// Dummy-Schublade für Episoden
	return hTisch_AnyClick();
}

function hSchublade03_AnyClick()
{
	// Dummy-Schublade für Episoden
	return hTisch_AnyClick();
}

function hSchublade04_AnyClick()
{
	// Dummy-Schublade für Episoden
	return hTisch_AnyClick();
}

function hSchublade05_AnyClick()
{
/* Schublade */
	if (any_click_move(130, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Was soll ich damit?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen wäre wohl sinnvoller.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(1);
			oSchublade.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Wie wäre es mit öffnen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Holz knarrt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hSchublade06_AnyClick()
{
	// Dummy-Schublade für Episoden
	return hTisch_AnyClick();
}

function hSchublade07_AnyClick()
{
	// Dummy-Schublade für Episoden
	return hTisch_AnyClick();
}

function hUntermBett_AnyClick()
{
	if (any_click_move(65, 130, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hmm, mal sehen, was sich unter meinem Bett so befindet.");
      Wait(40);
      player.Say("Aha!");
      Wait(20);
      player.Say("Da ist absolut nichts.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Wie soll ich das denn machen?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Soll ich mich etwa unter meinem Bett verstecken?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Bett ist davon ganz begeistert.");
			Wait(20);
			player.Say("Ne, wirklich.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Und wie stellst du dir das vor?");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das da nicht verstecken.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
