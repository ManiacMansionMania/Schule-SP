// Jungendusche (Ronville Schule)
bool b_Kalt01, b_Kalt02, b_Kalt03, b_Kalt04;
bool b_Warm01, b_Warm02, b_Warm03, b_Warm04;
int l_Test;
int l_Timer;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	Door[eDoorNumJungendusche].Init(oTuer, hTuer);

	oWasser01.SetView(67);
	oWasser01.Animate(0, 3, eRepeat, eNoBlock, eForwards);
	oWasser02.SetView(67);
	oWasser02.Animate(0, 3, eRepeat, eNoBlock, eForwards);
	oWasser03.SetView(67);
	oWasser03.Animate(0, 3, eRepeat, eNoBlock, eForwards);
	oWasser04.SetView(67);
	oWasser04.Animate(0, 3, eRepeat, eNoBlock, eForwards);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if (any_click_move(309, 116, eDirectionUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist der Jungenumkleideraum.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		else if ( Door[eDoorNumJungendusche].Click() )
		{
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hFenster01_AnyClick()
{
	if (any_click_move(mouse.x, 132, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dahinter liegt der Sportplatz der Schule.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das will ich nicht mit mir rumschleppen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lasse ich besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Für die braucht man einen Spezialschlüssel.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Besser nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Für die braucht man einen Spezialschlüssel.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Für die braucht man einen Spezialschlüssel.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann man das Fenster nicht öffnen.");
		}
		else Unhandled();
	}

}

function hFenster02_AnyClick()
{
	return hFenster01_AnyClick();
}

int Duschkopf(int l_XPos, int l_YPos)
{
	if (any_click_move(l_XPos, l_YPos, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Einer von vier Duschköpfen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den kann man nicht so einfach abnehmen ...");
			player.Say("und was sollte ich überhaupt damit?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lasse ich besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das kann und werde ich nicht tun.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Besser nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Den kann man nicht so einfach abnehmen ...");
			player.Say("und was sollte ich überhaupt damit?");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich bin doch kein Schieber.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte den Duschkopf verstopfen.");
		}
		else Unhandled();
	}
}


function hDuschkopf01_AnyClick()
{
	return Duschkopf(64, 132);
}

function hDuschkopf02_AnyClick()
{
	return Duschkopf(128, 132);
}

function hDuschkopf03_AnyClick()
{
	return Duschkopf(188, 132);
}

function hDuschkopf04_AnyClick()
{
	return Duschkopf(248, 132);
}

bool b_WasserHahnStatusSet(bool b_Kaltwasser, int l_Type, bool b_On)
{
	bool b_Return = false; // alten Status zurückmelden

	if ( b_Kaltwasser && (l_Type == 1) )
	{
		b_Return = b_Kalt01;
		b_Kalt01 = b_On;
	}
	else if ( !b_Kaltwasser && (l_Type == 1) )
	{
		b_Return = b_Warm01;
		b_Warm01 = b_On;
	}

	if ( b_Kaltwasser && (l_Type == 2) )
	{
		b_Return = b_Kalt02;
		b_Kalt02 = b_On;
	}
	else if ( !b_Kaltwasser && (l_Type == 2) )
	{
		b_Return = b_Warm02;
		b_Warm02 = b_On;
	}

	if ( b_Kaltwasser && (l_Type == 3) )
	{
		b_Return = b_Kalt03;
		b_Kalt03 = b_On;
	}
	else if ( !b_Kaltwasser && (l_Type ==3) )
	{
		b_Return = b_Warm03;
		b_Warm03 = b_On;
	}

	if ( b_Kaltwasser && (l_Type == 4) )
	{
		b_Return = b_Kalt04;
		b_Kalt04 = b_On;
	}
	else if ( !b_Kaltwasser && (l_Type == 4) )
	{
		b_Return = b_Warm04;
		b_Warm04 = b_On;
	}

	return b_Return;
}

bool b_WasserHahnStatusGet(bool b_Kaltwasser, int l_Type)
{
	bool b_Return = false; // alten Status zurückmelden

	if ( b_Kaltwasser && (l_Type == 1) )
	{
		b_Return = b_Kalt01;
	}
	else if ( !b_Kaltwasser && (l_Type == 1) )
	{
		b_Return = b_Warm01;
	}
	else if ( b_Kaltwasser && (l_Type == 2) )
	{
		b_Return = b_Kalt02;
	}
	else if ( !b_Kaltwasser && (l_Type == 2) )
	{
		b_Return = b_Warm02;
	}
	else if ( b_Kaltwasser && (l_Type == 3) )
	{
		b_Return = b_Kalt03;
	}
	else if ( !b_Kaltwasser && (l_Type == 3) )
	{
		b_Return = b_Warm03;
	}
	else if ( b_Kaltwasser && (l_Type == 4) )
	{
		b_Return = b_Kalt04;
	}
	else if ( !b_Kaltwasser && (l_Type == 4) )
	{
		b_Return = b_Warm04;
	}

	return b_Return;
}

bool b_WasserHahnOn(int l_Type)
{
	bool b_On = false;
	
	if ( (l_Type == 1) && (b_Kalt01 || b_Warm01) )
	{
		b_On = true;
	}
	else if ( (l_Type == 2) && (b_Kalt02 || b_Warm02) )
	{
		b_On = true;
	}
	else if ( (l_Type == 3) && (b_Kalt03 || b_Warm03) )
	{
		b_On = true;
	}
	else if ( (l_Type == 4) && (b_Kalt04 || b_Warm04) )
	{
		b_On = true;
	}

	return b_On;
}

int Wasserhahn(int l_XPos, int l_YPos, Object *o_object, bool b_Kaltwasser, int l_Type)
{
	if (any_click_move(l_XPos, l_YPos, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !b_WasserHahnStatusGet(b_Kaltwasser, l_Type) )
			{
				player.Say("Der Hahn ist zugedreht.");
			}
			else
			{
				player.Say("Der Hahn ist aufgedreht.");
			}
			// oder anders, falls er auf ist
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das will ich nicht mit mir rumschleppen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lasse ich besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( b_WasserHahnStatusGet(b_Kaltwasser, l_Type) )
			{
				player.Say("Der ist schon auf.");
			}
			else
			{
				b_WasserHahnStatusSet(b_Kaltwasser, l_Type, true);
				o_object.Visible = b_WasserHahnOn(l_Type);
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( b_WasserHahnStatusGet(b_Kaltwasser, l_Type) )
			{
				b_WasserHahnStatusSet(b_Kaltwasser, l_Type, false);
				o_object.Visible = b_WasserHahnOn(l_Type);				
			}
			else
			{
				player.Say("Der ist schon zu.");
			}
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich bin doch kein Schieber.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich bin doch kein Schieber.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else Unhandled();
	}
}

function hKaltwasser01_AnyClick()
{
	return Wasserhahn(56, 132, oWasser01, true, 1);
}

function hWarmwasser01_AnyClick()
{
	return Wasserhahn(75, 132, oWasser01, false, 1);
}

function hKaltwasser02_AnyClick()
{
	return Wasserhahn(118, 132, oWasser02, true, 2);
}

function hWarmwasser02_AnyClick()
{
	return Wasserhahn(137, 132, oWasser02, false, 2);
}

function hKaltwasser03_AnyClick()
{
	return Wasserhahn(178, 132, oWasser03, true, 3);
}

function hWarmwasser03_AnyClick()
{
	return Wasserhahn(197, 132, oWasser03, false, 3);
}

function hKaltwasser04_AnyClick()
{
	return Wasserhahn(239, 132, oWasser04, true, 4);
}

function hWarmwasser04_AnyClick()
{
	return Wasserhahn(256, 132, oWasser04, false, 4);
}

function hAbfluss_AnyClick()
{
	if (any_click_move(128, 132, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Er ist geschlossen.");
			// Wenn Abfluß auf ist, dann folgende Zeilen
			/*
			player.Say("Dieser Abfluss ist voller Haare.");
			player.Say("Echt unappetitlich!");
			*/
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Er ist geschlossen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lasse ich besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ein Wort - Nein.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Er ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich bin doch kein Schieber.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich bin doch kein Schieber.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit klappt es nicht.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
