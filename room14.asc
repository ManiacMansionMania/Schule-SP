// Mädchentoilette (Ronville Schule)

/****************************
*   Raum-Funktionen
****************************/
function room_FirstLoad()
{
	oWasser01.Clickable = false;
	oWasser02.Clickable = false;
	oWasser03.Clickable = false;

	oWasser01.SetView(56, 0);
	oWasser01.Animate(0, 1, eRepeat, eNoBlock);
	oWasser02.SetView(56, 0);
	oWasser02.Animate(0, 1, eRepeat, eNoBlock);
	oWasser03.SetView(56, 0);
	oWasser03.Animate(0, 1, eRepeat, eNoBlock);
}

function room_Load()
{
	Door[eDoorNumMaedchentoilette].Init(oTuer, hTuer);
	//oTuer.init_object(11);

	if ( GetGlobalInt(17) == 1 || GetGlobalInt(18) == 1 || GetGlobalInt(19) == 1 )
	{
		PlayAmbientSound(1, 12, 150, 0, 0);
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if (any_click_move(20, 120, eDirectionLeft))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es raus auf den Gang.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		//else if ( any_click_on_door (11, oTuer, 0, 120, eDirectionLeft, gr_SchulgangErdgeschoss3, 245, 95, eDirectionLeft) )
		else if ( Door[eDoorNumMaedchentoilette].Click() )
		{
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
function Toilette(int XPosition, Object *po_object)
{
	if (any_click_move(XPosition, 110, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein stink normales Klo.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Es ist fix montiert.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			PlaySound(38);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die ist doch schon offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(3);
			po_object.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Porzellan ist fest mit dem Boden verschraubt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			player.Say("Ich will das nicht runterspülen.");
		}
		else Unhandled();
	}
}

function oToilette01_AnyClick()
{
	return Toilette(90, oToilette01);
}

function oToilette02_AnyClick()
{
	return Toilette(140, oToilette02);
}

function oToilette03_AnyClick()
{
	return Toilette(190, oToilette03);
}


/****************************
*   Hotspot-Funktionen
****************************/
function hSpiegel01_AnyClick()
{
	if (any_click_move(mouse.x, 85, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Spiegel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der geht nicht ab.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Soll ich mich etwa schminken?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht bei diesem Spiegel.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der ist an die Wand geschraubt.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hSpiegel02_AnyClick()
{
	return hSpiegel01_AnyClick();
}

function hSpiegel03_AnyClick()
{
	return hSpiegel01_AnyClick();
}

function hWaschbecken01_AnyClick()
{
	if (any_click_move(mouse.x, 85, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Waschbecken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Es ist an der Wand befestigt. Ich bekomme es nicht ab.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Meine Hände sind sauber.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das klappt nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bewegt sich wirklich nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das nicht waschen.");
		}
		else Unhandled();
	}
}

function hWaschbecken02_AnyClick()
{
	return hWaschbecken01_AnyClick();
}

function hWaschbecken03_AnyClick()
{
	return hWaschbecken01_AnyClick();
}

int hToilette(int XPosition, Object *oObject)
{
	if (any_click_move(XPosition, 110, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein stink normales Klo.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die Tür ist befestigt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich sollte sie vorher öffnen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound(2);
			oObject.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Das würde den Türgriff beschädigen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Eine Tür öffnet man.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}	
		else Unhandled();
	}
}

function hToilette01_AnyClick()
{
	return hToilette(90, oToilette01);
}

function hToilette02_AnyClick()
{
	return hToilette(140, oToilette02);
}

function hToilette03_AnyClick()
{
	return hToilette(190, oToilette03);
}

int Hahnen(int XPosition, Object *oObject, int gi1, int gi2, int gi3)
{
		if (any_click_move(XPosition, 90, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Wasserhahn.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist fest montiert.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( GetGlobalInt(gi1) == 0 )
			{
				Wait(5);
				oObject.Visible = true;
				PlayAmbientSound(1, 12, 150, 0, 0);
				SetGlobalInt(gi1, 1);
			}
			else
			{
				Wait(5);
				oObject.Visible = false;
				if ( GetGlobalInt(gi2) == 0 && GetGlobalInt(gi3) == 0 )
				{
					StopAmbientSound(1);
				}
				SetGlobalInt(gi1, 0);
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( GetGlobalInt(gi1) == 0 )
			{
				Wait(5);
				oObject.Visible = true;
				PlayAmbientSound(1, 12, 150, 0, 0);
				SetGlobalInt(gi1, 1);
			}
			else
			{
			  player.Say("Das Wasser läuft doch schon.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( GetGlobalInt(gi1) == 1 )
			{
				Wait(5);
				oObject.Visible = false;
				if ( GetGlobalInt(gi2) == 0 && GetGlobalInt(gi3) == 0 )
					StopAmbientSound(1);
				SetGlobalInt(gi1, 0);
			}
			else
			{
			  player.Say("Das Wasser ist schon abgedreht.");
			}
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das nicht waschen.");
		}
		else Unhandled();
	}
}

function hHahnen01_AnyClick()
{
	return Hahnen(42, oWasser01, 17, 18, 19);
}

function hHahnen02_AnyClick()
{
	return Hahnen(235, oWasser02, 18, 19, 17);
}

function hHahnen03_AnyClick()
{
	return Hahnen(280, oWasser03, 19, 17, 18);
}

function hLuftschacht_AnyClick()
{
	if (any_click_move(15, 90, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Lüftungsschacht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Gitter geht nicht ab.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Gitter ist im Weg.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist fest verschlossen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das sitzt fest.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich ihn auch nicht auf.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
