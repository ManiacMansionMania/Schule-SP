// Schulgang Erdgeschoß (1) (Ronville Schule)

/****************************
*   Raum-Funktionen
****************************/
function room_FirstLoad()
{
	player.ScaleMoveSpeed = true;
}

function room_Load()
{
	Door[1].Init(oTuerMaedchen, hTuerMaedchen);
	Door[2].Init(oTuerJungen, hTuerJungen);
	Door[3].Init(oTuerKantine,  hTuerKantine);
	//oTuerJungen.init_object(5);
	//oTuerMaedchen.init_object(11);
	//oTuerKantine.init_object(20);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerMaedchen_AnyClick()
{
	if (any_click_move(222, 100, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist die Mädchentoilette.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		//else if ( any_click_on_door (11, oTuerMaedchen, 245, 95, eDirRight, 14, 0, 120, eDirRight) == 0 )
		else if ( Door[1].Click() )
		{
		}
		else Unhandled();
	}
}

function hTuerJungen_AnyClick()
{
	if (any_click_move(287, 130, eDirRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist die Jungentoilette.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		//else if ( any_click_on_door (5, oTuerJungen, 300, 130, eDirRight, 15, 0, 120, eDirRight) == 0 )
		else if ( Door[2].Click() )
		{
		}
		else Unhandled();
	}
}

function hTuerKantine_AnyClick()
{
	if (any_click_move(60, 135, eDirLeft))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist die Kantine.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		//else if ( any_click_on_door (20, oTuerKantine, 80, 130, eDirLeft, 16, 285, 110, eDirLeft) )
		else if ( Door[3].Click() )
		{
		}
		else Unhandled();
	}
}

function hTuerHausmeister_AnyClick()
{
	if (any_click_move(130, 100, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist die Hausmeisterkammer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			StartCutscene(eSkipESCOrRightButton);
			gAction.Visible = false;
			gMaingui.Visible = false;
			player.Say("Abgeschlossen.");
			Wait(20);
			player.FaceDirection(eDirDown);
			player.Say("Das ist die Hausmeisterkammer.");
			player.Say("Da drinnen versteckt sich unser Hausmeister, Pete Madison.");
			player.Say("Für ihn gibt es keine Charaktergrafiken, da man Pete NIEMALS zu Gesicht bekommt."); //bekommen soll.");
			player.Say("Man kann auch nicht mit Mr. Madison sprechen.");
			player.Say("Die einzige Möglichkeit mit ihm Kontakt aufzunehmen ist, ihm einen Zettel unter der Tür durchzuschieben.");
			player.Say("Rektor Harris hat übrigens solche Anweisungszettel in seinem Büro.");
			gAction.Visible = true;
			gMaingui.Visible = true;
			EndCutscene();
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else if ( player.ActiveInventory == iAnweisungLeer )
			{
				player.Say("Der Zettel ist noch leer.");
				Wait(20);
				player.Say("Ich sollte vielleicht vorher noch eine Anweisung schreiben.");
			}
			else if ( player.ActiveInventory == iAnweisungVoll )
			{
				player.Say("Ich schiebe den Zettel einfach unter der Tür durch.");
				PlaySound(4);
				player.LoseInventory(iAnweisungVoll);
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hQuergang_AnyClick()
{
	if (any_click_move(190, 85, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
			Wait(5);
			player.EnterRoom(10, 205, 110, eDirDown);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es nach draußen.");
		}
		else Unhandled();
	}
}

function hGang_AnyClick()
{
	if (any_click_move(190, 140, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
			Wait(5);
			player.EnterRoom(12, 0, 130, eDirRight);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es den Gang entlang.");
		}
		else Unhandled();
	}
}

function hLuftschacht_AnyClick()
{
	if (any_click_move(220, 90, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Lüftungsschacht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Gitter geht nicht ab.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Gitter ist im Weg.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der ist fest verschlossen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bringt mich nicht weiter.");
		}
		else if (UsedAction(eActUseInventory))
		{
			player.Say("Damit bekomme ich ihn auch nicht auf.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
