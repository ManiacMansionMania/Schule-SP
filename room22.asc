// Rektorzimmer (Ronville Schule)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
  aMusic86.Play();
	Door[eDoorNumRektorzimmer].Init(oTuer, hTuer);
	//oTuer.init_object(9);
}

function room_AfterFadeIn()
{
	StartCutscene(eSkipESCOrRightButton);
	gAction.Visible = false;
	gMaingui.Visible = false;
	Wait(50);
	cHarris.FaceLocation(320, cHarris.y, eBlock);
	cHarris.Say("Klausimausi!");
	Wait(10);
	cHarris.Say("Bist du noch gar nicht zu Hausi?");
	Wait(10);
	cHarris.Say("Kann ich dir irgendwie helfen?");
	Wait(10);
	cHarris.Say("Waren die anderen Kinder gemein zu dir?");
	Wait(20);
	player.Say("Hören Sie sofort auf damit!");
	Wait(20);
	cHarris.Say("Womit?");
	Wait(20);
	player.Say("So zu reden.");
	Wait(20);
	cHarris.Say("Na gut.");
	cHarris.FaceDirection(eDirectionDown);
	gAction.Visible = true;
	gMaingui.Visible = true;
	EndCutscene();
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if (any_click_move(280, 135, eDirectionRight))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es raus auf den Gang.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		//else if ( any_click_on_door (9, oTuer, 280, 135, eDirectionRight, gr_SchulgangErdgeschoss4, 140, 135, eDirectionLeft) )
		else if ( Door[eDoorNumRektorzimmer].Click() )
		{
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
function oSchubladeOben_AnyClick()
{
	if (any_click_move(mouse.x, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich sehe da nur unnützes Zeug.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mit zu schwer mit all dem Inhalt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Schließen wäre wohl besser.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist doch schon offen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(1);
			oSchubladeOben.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das da nicht reinlegen.");
		}
		else Unhandled();
	}
}

function oSchubladeMitte_AnyClick()
{
	if (any_click_move(mouse.x, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die ist voll mit Unterwäsche.");
			Wait(20);
			player.FaceDirection(eDirectionDown);
			player.Say("Wohnt Rektor Harris etwa hier?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mit zu schwer mit all dem Inhalt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Schließen wäre wohl besser.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist doch schon offen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(1);
			oSchubladeMitte.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das da nicht reinlegen.");
		}
		else Unhandled();
	}
}

function oSchubladeUnten_AnyClick()
{
	if (any_click_move(mouse.x, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die ist voll mit Socken.");
			Wait(20);
			player.FaceDirection(eDirectionDown);
			player.Say("Wohnt Rektor Harris etwa hier?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die ist mit zu schwer mit all dem Inhalt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Schließen wäre wohl besser.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Die ist doch schon offen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(1);
			oSchubladeUnten.Visible = false;
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das da nicht reinlegen.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hSchreibtisch_AnyClick()
{
	if (any_click_move(mouse.x, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Schreibtisch des Rektors.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir eindeutlig zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich will jetzt nicht Rektor spielen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Von hier aus sehe ich keine Schublade und die hinteren sind bestimmt abgeschlossen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Hier gibt es nichts zu Schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Au ja, machen wir Möbelrücken.");
			Wait(5);
			player.Say("Hnnngh!");
			Wait(5);
			player.Say("Äh! Lieber doch nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das da nicht rauflegen.");
		}
		else Unhandled();
	}
}

function hPapier_AnyClick()
{
	if (any_click_move(160, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da liegen ein paar von Rektor Harris' Zetteln.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player.InventoryQuantity[iAnweisungLeer.ID] > 0 )
			{
				player.Say("Ich habe schon einen.");
			}
			else
			{
				PlaySound(4);
				player.AddInventory(iAnweisungLeer);
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich sollte es vorher vielleicht mal nehmen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht mit einem Stück Papier nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das würde nur Unordnung auf den Tisch bringen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hBild_AnyClick()
{
	if (any_click_move(90, 125, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Soll das etwa Kunst sein?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dieses Bild will ich nun wirklich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wie denn?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Rektor Harris hat dahinter keinen Tresor versteckt.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Bild hängt doch schon an der Wand.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das düfte schwierig werden.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(mouse.x, 136, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein ziemlich großes Fenster.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Soll ich es etwa aus dem Rahmen reißen?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich könnte es putzen, aber dazu habe ich keine Lust.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich kann den Fenstergriff nicht finden.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Es ist doch schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das klappt so nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hBuecher_AnyClick()
{
	if (any_click_move(mouse.x, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein paar uninteressante Bücher über Kindererziehung.");
			Wait(20);
			player.FaceDirection(eDirectionDown);
			player.Say("Die würden selbst Bernoulli langweilen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich will das nicht lesen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nicht jetzt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das entbehrt jeder Logik.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hSchraenke_AnyClick()
{
	if (any_click_move(70, 130, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein paar Schränke.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die sind mir zu schwer. Vor allem mit den vielen Akten darin.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Soll ich mich etwa darin verstecken?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die sind alle abgeschlossen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sind doch schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die lassen sich nicht bewegen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hPapierkorb_AnyClick()
{
	if (any_click_move(105, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der ist vollkommen leer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich bin kein Müllmann.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie?");
		  Wait(20);
			player.Say("Soll ich ihn mir etwa aufsetzen?");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der hat keinen Deckel zum Öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ohne Deckel?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich lasse ihn lieber stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will das nicht wegwerfen.");
		}
		else Unhandled();
	}
}

int hSchublade(Object *oObject)
{
		if (any_click_move(mouse.x, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Schublade.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Öffnen wäre wohl besser.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			PlaySound(1);
			oObject.Visible = true;
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die ist doch schon zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Was soll das bringen?");
		}
		else Unhandled();
	}
}

function hSchubladeOben_AnyClick()
{
	return hSchublade(oSchubladeOben);
}

function hSchubladeMitte_AnyClick()
{
	return hSchublade(oSchubladeMitte);
}

function hSchubladeUnten_AnyClick()
{
	return hSchublade(oSchubladeUnten);
}


/****************************
*   Regionen-Funktionen
****************************/
