// Jungenumkleide (Ronville Schule)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	Door[eDoorNumJungenumkleide].Init(oTuer, hTuer);
	Door[eDoorNumJungendusche].Init(oTuerDusche, hTuerDusche);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if (any_click_move(Door[eDoorNumJungenumkleide].i_NewXPosition, Door[eDoorNumJungenumkleide].i_NewYPosition, eDirLeft))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist der Jungenumkleideraum.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		else if ( Door[eDoorNumJungenumkleide].Click() )
		{
		}
		else Unhandled();
	}
}

function hTuerDusche_AnyClick()
{
	if (any_click_move(25, 125, eDirLeft))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das ist der Jungenumkleideraum.");
		}
		else if (UsedAction(eActUseInventory))
		{
			if ( player.ActiveInventory == iSchluesselKlasse || player.ActiveInventory == iSchluesselTrophy )
			{
			  player.Say("Dieser Schlüssel passt nicht.");
			}
			else
			{
			  player.Say("Sieht das etwa wie ein Schlüssel aus?");
			}
		}
		else if ( Door[eDoorNumJungendusche].Click() )
		{
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
int Schrank(int l_XPos, int l_YPos, eDirection l_Dir,  int l_Number)
{
	if (any_click_move(l_XPos, l_YPos, l_Dir))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Schrank R-%02d", l_Number);
			player.Say("Einer der Schränke, in denen wir während der Sportstunden unsere Sachen einschließen können.");
			player.Say("Dieser Schrank ist verschlossen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das will ich nicht mit mir rumschleppen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lasse ich besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Schrank ist verschlossen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Er ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich denke nicht, dass Gewalt helfen wird.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich ihn auch nicht auf.");
		}
		else Unhandled();
	}
}

function hSchrankR01_AnyClick()
{
	return Schrank(52, 124, eDirUp, 1);
}

function hSchrankR02_AnyClick()
{
	return Schrank(73, 124, eDirUp, 2);
}

function hSchrankR03_AnyClick()
{
	return Schrank(94, 124, eDirUp, 3);
}

function hSchrankR04_AnyClick()
{
	return Schrank(115, 124, eDirUp, 4);
}

function hSchrankR05_AnyClick()
{
	return Schrank(184, 124, eDirUp, 5);
}

function hSchrankR06_AnyClick()
{
	return Schrank(205, 124, eDirUp, 6);
}

function hSchrankR07_AnyClick()
{
	return Schrank(226, 124, eDirUp, 7);
}

function hKunst_AnyClick()
{
	if (any_click_move(264, 118, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich frage mich, wer das hier aufgehängt hat.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dafür habe ich nun wirklich keine Verwendung.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lasse ich besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das kann und werde ich nicht tun.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Besser nicht.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Es ist zwar kein künstlerisches Meisterwerk, ...");
			player.Say("aber deswegen muss ich es ja nicht gleich von der Wand reißen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich bin doch kein Schieber.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das würde das Kusntwerk nur beschädigen.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(264, 118, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein offenes Fenster.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das will ich nicht mit mir rumschleppen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das lasse ich besser.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Es ist schon offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nein, es sollte hier noch ein wenig gelüftet werden.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Nein, es sollte hier noch ein wenig gelüftet werden.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich bin doch kein Schieber.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich will es nicht durch das Fenster werfen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
